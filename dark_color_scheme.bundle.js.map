{"version":3,"file":"dark_color_scheme.bundle.js","mappings":"kIAwDA,SAASA,EAAiBC,GACxBC,SAASC,gBAAgBC,QAAQH,YAAcA,EAC/C,MAAMI,EAAwBH,SAASI,cACrC,4BAE4B,OAA1BD,GAGFA,EAAsBE,aACpB,UACgB,SAAhBN,EA/DmB,UADC,UAmE1B,EA3DA,WACE,MAAMO,EAAkCC,MAAMC,KAC5CR,SAASS,uBAAuB,+BAE5BV,EAAc,IAAoBW,IAAI,eAC5C,GAAoB,SAAhBX,GAA0C,UAAhBA,EAC5BO,EAAgCK,SAASC,IAEvCA,EAAKC,QAA0B,SAAhBd,CAAsB,IAEvCD,EAAiBC,OACZ,CACL,MAAMe,EAA4BC,OAAOC,WACvC,gCACAC,QAKFnB,EAAiBgB,EAA4B,OAAS,SACtDR,EAAgCK,SAASC,IAEvCA,EAAKC,QAAUC,CAAyB,GAE5C,CACAR,EAAgCK,SAASC,IACvCA,EAAKM,iBAAiB,UAAU,KAE9B,MAAMnB,EAAca,EAAKC,QAAU,OAAS,QAC5Cf,EAAiBC,GACjB,IAAoBoB,IAAI,cAAepB,GAEvCO,EAAgCK,SAASS,IACnCA,IAAYR,IAEdQ,EAAQP,QAAUD,EAAKC,QACzB,GACA,GACF,GAEN,CA7CAQ,E,iCCLO,MAAMC,EAAsB,CAMjCZ,IAAMa,IACJ,IAAIC,EAAQ,KACZ,IACEA,EAAQC,aAAaC,QAAQH,EAC/B,CAAE,MAAOI,GACPC,QAAQC,MAAMF,EAChB,CACA,OAAOH,CAAK,EAQdL,IAAK,CAACI,EAAKC,KACT,IACEC,aAAaK,QAAQP,EAAKC,EAC5B,CAAE,MAAOG,GACPC,QAAQC,MAAMF,EAChB,G","sources":["webpack://pikachu-volleyball/./src/resources/js/utils/dark_color_scheme.js","webpack://pikachu-volleyball/./src/resources/js/utils/local_storage_wrapper.js"],"sourcesContent":["'use strict';\r\nimport { localStorageWrapper } from './local_storage_wrapper';\r\nconst THEME_COLOR_LIGHT = '#FFFFFF';\r\nconst THEME_COLOR_DARK = '#202124';\r\n\r\nsetUpDarkColorSchemeCheckbox();\r\n\r\n/**\r\n * Set up dark color scheme checkbox\r\n */\r\nfunction setUpDarkColorSchemeCheckbox() {\r\n  const darkColorSchemeCheckboxElements = Array.from(\r\n    document.getElementsByClassName('dark-color-scheme-checkbox')\r\n  );\r\n  const colorScheme = localStorageWrapper.get('colorScheme');\r\n  if (colorScheme === 'dark' || colorScheme === 'light') {\r\n    darkColorSchemeCheckboxElements.forEach((elem) => {\r\n      // @ts-ignore\r\n      elem.checked = colorScheme === 'dark';\r\n    });\r\n    applyColorScheme(colorScheme);\r\n  } else {\r\n    const doesPreferDarkColorScheme = window.matchMedia(\r\n      '(prefers-color-scheme: dark)'\r\n    ).matches;\r\n    // The following line is not for \"document.documentElement.dataset.colorScheme = colorScheme;\".\r\n    // document.documentElement.dataset.colorScheme is not needed to be set for displaying dark color scheme,\r\n    // since style.css has media query \"@media (prefers-color-scheme: dark)\" which deals with it without JavaScript.\r\n    // The following line is for setting theme color and etc...\r\n    applyColorScheme(doesPreferDarkColorScheme ? 'dark' : 'light');\r\n    darkColorSchemeCheckboxElements.forEach((elem) => {\r\n      // @ts-ignore\r\n      elem.checked = doesPreferDarkColorScheme;\r\n    });\r\n  }\r\n  darkColorSchemeCheckboxElements.forEach((elem) => {\r\n    elem.addEventListener('change', () => {\r\n      // @ts-ignore\r\n      const colorScheme = elem.checked ? 'dark' : 'light';\r\n      applyColorScheme(colorScheme);\r\n      localStorageWrapper.set('colorScheme', colorScheme);\r\n      // For syncing states of other checkbox elements\r\n      darkColorSchemeCheckboxElements.forEach((element) => {\r\n        if (element !== elem) {\r\n          // @ts-ignore\r\n          element.checked = elem.checked;\r\n        }\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n * Apply color scheme. (Display color scheme to the screen.)\r\n * @param {string} colorScheme 'dark' or 'light'\r\n */\r\nfunction applyColorScheme(colorScheme) {\r\n  document.documentElement.dataset.colorScheme = colorScheme;\r\n  const themeColorMetaElement = document.querySelector(\r\n    'meta[name=\"theme-color\"]'\r\n  );\r\n  if (themeColorMetaElement !== null) {\r\n    // The line below is for the status bar color, which is set by theme-color\r\n    // meta tag content, of PWA in Apple devices.\r\n    themeColorMetaElement.setAttribute(\r\n      'content',\r\n      colorScheme === 'dark' ? THEME_COLOR_DARK : THEME_COLOR_LIGHT\r\n    );\r\n  }\r\n}\r\n","export const localStorageWrapper = {\r\n  /**\r\n   * Get value corresponding to the key from localStorage\r\n   * @param {string} key\r\n   * @returns {string|null}\r\n   */\r\n  get: (key) => {\r\n    let value = null;\r\n    try {\r\n      value = localStorage.getItem(key);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n    return value;\r\n  },\r\n\r\n  /*\r\n   * Set key-value pair to the localStorage\r\n   * @param {string} key\r\n   * @param {string} value\r\n   */\r\n  set: (key, value) => {\r\n    try {\r\n      localStorage.setItem(key, value);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  },\r\n};\r\n"],"names":["applyColorScheme","colorScheme","document","documentElement","dataset","themeColorMetaElement","querySelector","setAttribute","darkColorSchemeCheckboxElements","Array","from","getElementsByClassName","get","forEach","elem","checked","doesPreferDarkColorScheme","window","matchMedia","matches","addEventListener","set","element","setUpDarkColorSchemeCheckbox","localStorageWrapper","key","value","localStorage","getItem","err","console","error","setItem"],"sourceRoot":""}